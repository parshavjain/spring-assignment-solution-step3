2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-12-27 12:13:12 [main] DEBUG o.s.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-12-27 12:13:12 [main] DEBUG o.s.t.c.s.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@260e3837 testClass = MessageTest, testInstance = com.stackroute.activitystream.test.MessageTest@1b4872bc, testMethod = testSendMessageToCircle@MessageTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@88b76f2 testClass = MessageTest, locations = '{}', classes = '{class com.stackroute.activitystream.config.ApplicationContextConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@166fa74d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2017-12-27 12:13:12 [main] DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'com.stackroute.activitystream.test.MessageTest.testSendMessageToCircle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-12-27 12:13:12 [main] DEBUG o.s.t.c.t.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT] found for test context [DefaultTestContext@260e3837 testClass = MessageTest, testInstance = com.stackroute.activitystream.test.MessageTest@1b4872bc, testMethod = testSendMessageToCircle@MessageTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@88b76f2 testClass = MessageTest, locations = '{}', classes = '{class com.stackroute.activitystream.config.ApplicationContextConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@166fa74d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
2017-12-27 12:13:12 [main] DEBUG o.s.t.c.t.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [com.stackroute.activitystream.test.MessageTest].
2017-12-27 12:13:12 [main] DEBUG o.s.t.c.t.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@3434a4f0 transactionManagerName = '', defaultRollback = true] for test class [com.stackroute.activitystream.test.MessageTest].
2017-12-27 12:13:12 [main] DEBUG o.s.t.c.c.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@88b76f2 testClass = MessageTest, locations = '{}', classes = '{class com.stackroute.activitystream.config.ApplicationContextConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@166fa74d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
2017-12-27 12:13:12 [main] DEBUG o.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@522bf64e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 68, missCount = 1]
2017-12-27 12:13:12 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2017-12-27 12:13:12 [main] DEBUG o.s.t.c.t.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@260e3837 testClass = MessageTest, testInstance = com.stackroute.activitystream.test.MessageTest@1b4872bc, testMethod = testSendMessageToCircle@MessageTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@88b76f2 testClass = MessageTest, locations = '{}', classes = '{class com.stackroute.activitystream.config.ApplicationContextConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@166fa74d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2017-12-27 12:13:12 [main] DEBUG o.s.o.h.HibernateTransactionManager - Creating new transaction with name [com.stackroute.activitystream.test.MessageTest.testSendMessageToCircle]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-12-27 12:13:12 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2017-12-27 12:13:12 [main] DEBUG o.s.o.h.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2017-12-27 12:13:12 [main] DEBUG o.s.o.h.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
2017-12-27 12:13:12 [main] DEBUG o.h.e.t.internal.TransactionImpl - begin
2017-12-27 12:13:12 [main] DEBUG o.s.o.h.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [1816073816, URL=jdbc:mysql://localhost:3306/activitystream_step3, UserName=root@localhost, MySQL Connector Java]
2017-12-27 12:13:12 [main] INFO  o.s.t.c.t.TransactionContext - Began transaction (1) for test context [DefaultTestContext@260e3837 testClass = MessageTest, testInstance = com.stackroute.activitystream.test.MessageTest@1b4872bc, testMethod = testSendMessageToCircle@MessageTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@88b76f2 testClass = MessageTest, locations = '{}', classes = '{class com.stackroute.activitystream.config.ApplicationContextConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@166fa74d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@18d910b3]; rollback [true]
2017-12-27 12:13:13 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
2017-12-27 12:13:13 [main] DEBUG o.s.o.h.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2017-12-27 12:13:13 [main] DEBUG o.s.o.h.HibernateTransactionManager - Participating in existing transaction
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@31f77791
2017-12-27 12:13:13 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.stackroute.activitystream.model.User u where u.username = :username
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'stackroute'
    |        |  |  |  \-[IDENT] Node: 'activitystream'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'User'
    |        \-[ALIAS] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2017-12-27 12:13:13 [main] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.stackroute.activitystream.model.User (u) -> user0_
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : u -> user0_.username
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@31aa3ca5
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : u.username -> user0_.username
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.username user0_.username username ) ? ) ) )
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [user user0_]
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.username as username1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.stackroute.activitystream.model.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.name as name2_2_, user0_.password as password3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.stackroute.activitystream.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.stackroute.activitystream.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.username' {alias=u, className=com.stackroute.activitystream.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@31aa3ca5}

2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.stackroute.activitystream.model.User u where u.username = :username
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select user0_.username as username1_2_, user0_.name as name2_2_, user0_.password as password3_2_ from user user0_ where user0_.username=?
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-12-27 12:13:13 [main] DEBUG org.hibernate.SQL - select user0_.username as username1_2_, user0_.name as name2_2_, user0_.password as password3_2_ from user user0_ where user0_.username=?
2017-12-27 12:13:13 [main] DEBUG o.s.o.h.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2017-12-27 12:13:13 [main] DEBUG o.s.o.h.HibernateTransactionManager - Participating in existing transaction
2017-12-27 12:13:13 [main] DEBUG org.hibernate.SQL - select user0_.username as username1_2_, user0_.name as name2_2_, user0_.password as password3_2_ from user user0_ where user0_.username=?
2017-12-27 12:13:13 [main] DEBUG o.s.o.h.HibernateTransactionManager - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
2017-12-27 12:13:13 [main] DEBUG o.s.o.h.HibernateTransactionManager - Participating in existing transaction
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.stackroute.activitystream.model.Circle where circleName = :circleName
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'stackroute'
    |           |  |  \-[IDENT] Node: 'activitystream'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Circle'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'circleName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'circleName'

2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2017-12-27 12:13:13 [main] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.stackroute.activitystream.model.Circle (<no alias>) -> circle0_
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : circleName -> org.hibernate.type.StringType@31aa3ca5
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.circleName -> circle0_.circleName
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} circle circle0_ ) ( where ( = ( circle0_.circleName {synthetic-alias} circleName ) ? ) ) )
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [circle circle0_]
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (circle)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'circle0_.circleName as circleNa1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=circle,tableAlias=circle0_,origin=null,columns={,className=com.stackroute.activitystream.model.Circle}}}
    |  \-[SQL_TOKEN] SqlFragment: 'circle0_.createdDate as createdD2_0_, circle0_.creatorId as creatorI3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[circle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'circle circle0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=circle,tableAlias=circle0_,origin=null,columns={,className=com.stackroute.activitystream.model.Circle}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'circle0_.circleName' {propertyName=circleName,dereferenceType=PRIMITIVE,getPropertyPath=circleName,path={synthetic-alias}.circleName,tableAlias=circle0_,className=com.stackroute.activitystream.model.Circle,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'circleName' {originalText=circleName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=circleName, expectedType=org.hibernate.type.StringType@31aa3ca5}

2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.stackroute.activitystream.model.Circle where circleName = :circleName
2017-12-27 12:13:13 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select circle0_.circleName as circleNa1_0_, circle0_.createdDate as createdD2_0_, circle0_.creatorId as creatorI3_0_ from circle circle0_ where circle0_.circleName=?
2017-12-27 12:13:13 [main] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2017-12-27 12:13:13 [main] DEBUG org.hibernate.SQL - select circle0_.circleName as circleNa1_0_, circle0_.createdDate as createdD2_0_, circle0_.creatorId as creatorI3_0_ from circle circle0_ where circle0_.circleName=?
